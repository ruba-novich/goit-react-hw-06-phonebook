{"version":3,"sources":["Components/ContactList/ContactList.module.css","Components/Section/Section.module.css","Components/SearchFilter/SearchFilter.module.css","Components/Container/Container.module.css","redux/phoneBook/phoneBook-actions.js","redux/phoneBook/phoneBook-reducer.js","redux/store.js","Components/Container/Container.js","Components/Section/Section.js","redux/phoneBook/selectors.js","Components/ContactForm/ContactForm.js","Components/SearchFilter/SearchFilter.js","Components/ContactList/ContactList.js","App.js","index.js","Components/ContactForm/ContactForm.module.css"],"names":["module","exports","contactsActions","addContact","createAction","name","number","payload","id","uuidv4","delContact","changeFilter","itemsReducer","createReducer","state","filter","filterReducer","_","contactsReducer","combineReducers","items","persistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","rootReducer","contacts","persistedReducer","persistReducer","store","configureStore","reducer","devTools","process","persistor","persistStore","Container","children","className","styles","Section","title","section","getContacts","getFilter","getVisibleContacts","contact","toLowerCase","includes","getFilterContacts","ContactForm","useState","setName","setNumber","nameInputId","numberInputId","dispatch","useDispatch","useSelector","handleChange","e","currentTarget","value","reset","onSubmit","preventDefault","alert","find","form","htmlFor","label","type","input","pattern","required","onChange","btn","SearchFilter","lable","filters","target","ContactList","list","map","item","onClick","onDeleteContact","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.35978dae.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__17xn8\",\"item\":\"ContactList_item__2hYf7\",\"btn\":\"ContactList_btn__3VcAI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__iCkpm\",\"title\":\"Section_title__zaphQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lable\":\"SearchFilter_lable__1L86X\",\"filters\":\"SearchFilter_filters__3pXNG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__h4v-q\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst addContact = createAction('contact/add', (name, number) => ({\r\n  payload: {\r\n    id: uuidv4(),\r\n    name,\r\n    number,\r\n  },\r\n}));\r\nconst delContact = createAction('contacts/delete');\r\nconst changeFilter = createAction('contacts/filter');\r\n\r\nconst contactsActions = { addContact, delContact, changeFilter };\r\n\r\nexport default contactsActions;\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport contactsActions from '../phoneBook/phoneBook-actions';\r\n\r\nconst itemsReducer = createReducer([], {\r\n  [contactsActions.addContact]: (state, { payload }) => [...state, payload],\r\n  [contactsActions.delContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filterReducer = createReducer('', {\r\n  [contactsActions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst contactsReducer = combineReducers({\r\n  items: itemsReducer,\r\n  filter: filterReducer,\r\n});\r\n\r\nexport default contactsReducer;\r\n","import {\r\n  configureStore,\r\n  getDefaultMiddleware,\r\n  combineReducers,\r\n} from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport contactsReducer from './phoneBook/phoneBook-reducer';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst persistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: contactsReducer,\r\n});\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n","import { div } from 'prelude-ls';\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Container.module.css';\r\n\r\nconst Container = ({ children }) => (\r\n  <div className={styles.Container}>{children}</div>\r\n);\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Container;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Section.module.css';\r\n\r\nconst Section = ({ title, children }) => (\r\n  <section className={styles.section}>\r\n    <h2 className={styles.title}>{title}</h2>\r\n    {children}\r\n  </section>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","export const getContacts = state => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const getVisibleContacts = state => {\r\n  const contacts = getContacts(state);\r\n  const filter = getFilter(state);\r\n\r\n  const getFilterContacts = contacts => {\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n  };\r\n\r\n  return getFilterContacts(contacts);\r\n};\r\n","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getContacts } from '../../redux/phoneBook/selectors';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport contactsActions from '../../redux/phoneBook/phoneBook-actions';\r\nimport styles from './ContactForm.module.css';\r\n\r\nfunction ContactForm() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const nameInputId = uuidv4();\r\n  const numberInputId = uuidv4();\r\n\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(getContacts);\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (name === '') {\r\n      return alert(`Введите, пожалуйста, имя контакта.`);\r\n    }\r\n\r\n    if (number === '') {\r\n      return alert(`Введите, пожалуйста, номер телефона контакта.`);\r\n    }\r\n\r\n    if (\r\n      contacts.find(\r\n        contact => contact.name.toLowerCase() === name.toLowerCase(),\r\n      )\r\n    ) {\r\n      reset();\r\n      return alert(`${name} is already in contacts.`);\r\n    }\r\n\r\n    dispatch(contactsActions.addContact(name, number));\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={styles.form}>\r\n      <label htmlFor={nameInputId} className={styles.label}>\r\n        Name\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          className={styles.input}\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={handleChange}\r\n          id={nameInputId}\r\n          value={name}\r\n        ></input>\r\n      </label>\r\n      <label htmlFor={numberInputId} className={styles.label}>\r\n        Number\r\n        <br />\r\n        <input\r\n          type=\"tel\"\r\n          className={styles.input}\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          onChange={handleChange}\r\n          id={numberInputId}\r\n          value={number}\r\n        ></input>\r\n      </label>\r\n      <button type=\"submit\" className={styles.btn}>\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ContactForm;\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getFilter } from '../../redux/phoneBook/selectors';\r\nimport contactsActions from '../../redux/phoneBook/phoneBook-actions';\r\nimport styles from './SearchFilter.module.css';\r\n\r\nconst SearchFilter = () => {\r\n  const value = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n  const onChange = e => dispatch(contactsActions.changeFilter(e.target.value));\r\n  return (\r\n    <label className={styles.lable}>\r\n      Find contact by name\r\n      <br />\r\n      <input\r\n        className={styles.filters}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n      ></input>\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default SearchFilter;\r\n","import React from 'react';\r\nimport contactsActions from '../../redux/phoneBook/phoneBook-actions';\r\nimport styles from './ContactList.module.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getVisibleContacts } from '../../redux/phoneBook/selectors';\r\n\r\nconst ContactList = () => {\r\n  const contacts = useSelector(getVisibleContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const onDeleteContact = id => dispatch(contactsActions.delContact(id));\r\n\r\n  return (\r\n    <ul className={styles.list}>\r\n      {contacts.map(({ name, number, id }) => (\r\n        <li key={id} className={styles.item}>\r\n          {name}: {number}\r\n          <button onClick={() => onDeleteContact(id)} className={styles.btn}>\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import React from 'react';\r\n\r\nimport Container from './Components/Container';\r\nimport Section from './Components/Section';\r\nimport ContactForm from './Components/ContactForm';\r\nimport SearchFilter from './Components/SearchFilter';\r\nimport ContactList from './Components/ContactList';\r\n\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './styles.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <Container>\r\n      <Section title=\"PhoneBook\">\r\n        <ContactForm />\r\n      </Section>\r\n      <Section title=\"Contacts\">\r\n        <SearchFilter />\r\n        <ContactList />\r\n      </Section>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport store from './redux/store';\r\nimport App from './App';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\n// import store from './redux/store';\r\n// import { myAction } from './redux/actions';\r\n\r\n// console.log(store);\r\n// store.getState();\r\n\r\n// store.dispatch(myAction);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store.store}>\r\n      <PersistGate loading={null} persistor={store.persistor}>\r\n        <BrowserRouter>\r\n          <App />\r\n        </BrowserRouter>\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__Mix_7\",\"lable\":\"ContactForm_lable__2mgVC\",\"input\":\"ContactForm_input__eowyl\",\"btn\":\"ContactForm_btn__1p19u\"};"],"sourceRoot":""}